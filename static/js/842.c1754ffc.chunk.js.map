{"version":3,"file":"static/js/842.c1754ffc.chunk.js","mappings":"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","sources":["components/Home/Home.jsx","components/Map/Map.jsx","components/Rooms/RoomType.jsx","components/Rooms/RoomTypes.jsx","webpack://react-homework-template/./src/components/Rooms/Rooms.module.css?e83f","../node_modules/src/observe.ts"],"sourcesContent":["import RoomTypes from '../Rooms/RoomTypes';\nimport Map from '../Map/Map';\nimport app from '../App.module.css';\nimport { useInView } from 'react-intersection-observer';\n\nconst Home = () => {\n  const { ref, inView } = useInView({\n    threshold: 0,\n  });\n\n  return (\n    <>\n      <div className={app.hero} aria-label=\"hero\">\n        <h2\n          className={\n            !inView ? app.hero__title : `${app.hero__title} ${app.show}`\n          }\n          ref={ref}\n        >\n          Енергетик<span className={app.hero__sublogo}>база відпочинку</span>\n        </h2>\n      </div>\n      <div className={app.container}>\n        <RoomTypes />\n        <Map />\n      </div>\n    </>\n  );\n};\nexport default Home;\n","import app from '../App.module.css';\n\nconst Map = () => {\n  return (\n    <section className={app.wrapper}>\n      <h2 className={app.section__title}>Як нас знайти</h2>\n      <div className={app.wrapper}>\n        <iframe\n          className={app.map}\n          src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2739.9273150320287!2d31.17733991550444!3d46.6281980630412!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x40c66adf95ed7f39%3A0x9e5b87c21e66c3b8!2z0JXQvdC10YDQs9C10YLQuNC6!5e0!3m2!1suk!2s!4v1676645330052!5m2!1suk!2s\"\n          title=\"googleMap\"\n          loading=\"lazy\"\n        ></iframe>\n      </div>\n    </section>\n  );\n};\nexport default Map;\n","import app from '../App.module.css';\nimport css from './Rooms.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { useInView } from 'react-intersection-observer';\nimport PropTypes from 'prop-types';\n\n\nconst RoomType = ({ type, descr, image }) => {\n\n  const { ref, inView } = useInView({\n    threshold: 0,\n  });\n\n  return (\n    <li ref={ref} className={!inView ? app.item : `${app.item} ${app.show}`}>\n      <NavLink to={`/rooms/${type}`} className={css.navLink}>\n        <div className={app.imgWrapper}>\n          <img\n            className={app.roomImg}\n            src={`/agat/${image?.split('.')[0]}_480.jpg`}\n            width=\"320\"\n            height=\"240\"\n            alt={type}\n          ></img>\n        </div>\n        <div className={app.infoWrapper}>\n          <h3 className={app.title}>{type}</h3>\n          <ul className={css.prices}>\n            <li className={app.text}>{descr}</li>\n          </ul>\n        </div>\n      </NavLink>\n    </li>\n  );\n};\nexport default RoomType;\n\nRoomType.propTypes = {\n  type: PropTypes.string.isRequired,\n  descr: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n};\n","import app from '../App.module.css';\nimport roomTypes from '../../db/types.json';\nimport RoomType from './RoomType.jsx';\n\nconst RoomTypes = () => {\n  const shortDescr = (descr)=>{\n    const res = descr.split('.')\n    return `${res[0]}.`\n  }\n  return (\n    <section className={app.wrapper}>\n      <h2 className={app.section__title}>Наші номери</h2>\n      <div className={app.wrapper}>\n      <ul className={app.list}>\n        {roomTypes.map(({ id, type, descr, image }) => (\n          <RoomType\n            key={id}\n            type={type}\n            descr={shortDescr(descr)}\n            image={image}\n          />\n        ))}\n      </ul>\n      </div>\n      \n    </section>\n  );\n};\nexport default RoomTypes;\n","// extracted by mini-css-extract-plugin\nexport default {\"navLink\":\"Rooms_navLink__zqqKc\",\"prices\":\"Rooms_prices__5NCfl\",\"thumb\":\"Rooms_thumb__h8SOL\"};","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n"],"names":["useInView","threshold","ref","inView","className","app","src","title","loading","type","descr","image","to","css","split","width","height","alt","shortDescr","res","roomTypes","id","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","defaultFallbackInView","getRootId","root","has","get","set","sort","filter","key","map","createObserver","instance","some","Object","intersectionRatio","trackVisibility","isVisible","IntersectionObserver","entries","entry","isIntersecting","forEach","target","callback","Array","element","isArray","fallbackInView","window","bounds","getBoundingClientRect","time","boundingClientRect","thresholds","intersectionRect","rootBounds","callbacks","push","observe","unobserve","splice","indexOf","length","delete","size","disconnect","isPlainChildren","props","children","InView","constructor","node","_unobserveCb","handleNode","triggerOnce","setState","keys","initialInView","skip","observeNode","handleChange","onChange","state","componentDidUpdate","prevProps","observerMap","useEffect","current","as","createElement","useState","entryTarget","setRef","React"],"sourceRoot":""}