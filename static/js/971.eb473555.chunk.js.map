{"version":3,"file":"static/js/971.eb473555.chunk.js","mappings":"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","sources":["components/PricesTable.jsx","components/Gallery.jsx","components/Room.jsx","webpack://react-homework-template/./src/components/Prices.module.css?2c02","webpack://react-homework-template/./src/components/Rooms.module.css?9429"],"sourcesContent":["import dates from '../db/seasonDates.json';\nimport { NavLink } from 'react-router-dom';\nimport app from './App.module.css';\nimport css from './Prices.module.css';\n\nconst { priceLowBefore, priceLowAfter, priceMiddle, priceHigh } = dates;\n\nconst Table = ({ roomType, rooms }) => {\n  return (\n    <table className={app.tableGeneral}>\n      <caption className={app.title}>{roomType}</caption>\n      <thead>\n        <tr>\n          <td className={app.tableTitle}>\n            Тип номера\n          </td>\n          <td className={app.tableTitle}>\n            Ціна\n            <p>{priceLowBefore}</p>\n          </td>\n          <td className={app.tableTitle}>\n            Ціна\n            <p>{priceMiddle}</p>\n          </td>\n          <td className={app.tableTitle}>\n            Ціна\n            <p>{priceHigh}</p>\n          </td>\n          <td className={app.tableTitle}>\n            Ціна\n            <p>{priceLowAfter}</p>\n          </td>\n        </tr>\n      </thead>\n      {rooms[roomType].map(room => (\n        <tbody key={room.id}>\n          <tr className={css.priceInfo}>\n            <td>\n              <NavLink to={`/rooms/${roomType}/${room.id}`} className={css.link}>\n                {room.title} {room.persons}-х місний\n              </NavLink>\n            </td>\n            <td>{room.priceLow}</td>\n            <td>{room.priceMiddle}</td>\n            <td>{room.priceHigh}</td>\n            <td>{room.priceLow}</td>\n          </tr>\n        </tbody>\n      ))}\n    </table>\n  );\n};\nexport default Table;\n","import React, { useState } from 'react';\nimport Lightbox from 'react-spring-lightbox';\nimport app from './App.module.css'\n\nconst CoolLightbox = ({ links, currentImage, updateLightBox }) => {\n  const images = [];\n  links.map(link =>\n    images.push({\n      src: `../../${link}`,\n      loading: 'lazy',\n      alt: link,\n    })\n  );\n  const [currentImageIndex, setCurrentIndex] = useState(\n    links.indexOf(currentImage)\n  );\n    console.log('currentImageIndex', currentImageIndex);\n  const gotoPrevious = () =>\n    currentImageIndex > 0 && setCurrentIndex(currentImageIndex - 1);\n\n  const gotoNext = () =>\n    currentImageIndex + 1 < images.length &&\n    setCurrentIndex(currentImageIndex + 1);\n\n  return (\n    <Lightbox\n      isOpen={true}\n      onPrev={gotoPrevious}\n      onNext={gotoNext}\n      images={images}\n      currentIndex={currentImageIndex}\n      /* Add your own UI */\n      // renderHeader={() => (<CustomHeader />)}\n      // renderFooter={() => (<CustomFooter />)}\n      renderPrevButton={() => (<button className={app.galButton} onClick={()=>{gotoPrevious()}}> - </button>)}\n        renderNextButton={() => ( <button className={app.galButton} onClick={()=>{gotoNext()}}> + </button> )}\n      // renderImageOverlay={() => (<ImageOverlayComponent >)}\n\n      /* Add styling */\n      className={app.gal}\n      // style={{ background: \"grey\" }}\n\n      /* Handle closing */\n      onClose={()=>updateLightBox(false)}\n\n      /* Use single or double click to zoom */\n      // singleClickToZoom\n\n      /* react-spring config for open/close animation */\n      //   pageTransitionConfig={{\n      //     from: { transform: \"scale(0.75)\", opacity: 0 },\n      //     enter: { transform: \"scale(1)\", opacity: 1 },\n      //     leave: { transform: \"scale(0.75)\", opacity: 0 },\n      //     config: { mass: 1, tension: 320, friction: 32 }\n      //   }}\n    />\n  );\n};\n\nexport default CoolLightbox;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport app from './App.module.css';\nimport css from './Rooms.module.css';\nimport prices from '../db/prices.json';\nimport roomTypes from '../db/types.json';\nimport Table from './PricesTable';\n// import Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport CoolLightbox from './Gallery';\n\n\n\nconst Room = () => {\n  const [roomImage, updateImage] = useState('');\n  const [openedLightBox, updateLightBox] = useState(false);\n\n  const { roomId } = useParams();\n  const room = prices.find(room => room.id === roomId);\n  const {\n    type,\n    id,\n    title,\n    persons,\n    priceLow,\n    priceMiddle,\n    priceHigh,\n    filling,\n  } = room;\n  const roomTable = {\n    [type]: [{ id, title, persons, priceLow, priceMiddle, priceHigh }],\n  };\n  const { images } = roomTypes.find(el => el.type === room.type);\n\n  useEffect(() => {\n    if(roomImage) updateLightBox(true);\n  }, [roomImage]);\n\n  return (\n    <div className={app.wrapper}>\n      <div className={css.thumb}>\n        <Table roomType={type} rooms={roomTable} />\n      </div>\n      <p className={app.title}> Комплектація номера:</p>\n      <ul className={app.filling}>\n        {filling.map(el => (\n          <li className={app.text} key={el}>\n            - {el}\n          </li>\n        ))}\n      </ul>\n\n      <ul className={app.list}>\n            {images.map(roomImg => (\n              <li  key={roomImg}>\n                <div >\n                  <img\n                    className={app.roomImg}\n                    onClick={()=>updateImage(roomImg)}\n                    src={`../../${roomImg}`}\n                    width=\"320px\"\n                    height=\"240px\"\n                    alt={room.title}\n                  ></img>\n                </div>\n              </li>\n            ))}\n      </ul>\n      {/* <ResponsiveMasonry\n                columnsCountBreakPoints={{350: 1, 750: 2, 900: 3}}\n            >\n                <Masonry>\n                    {images.map((image, i) => (\n                        <img\n                            key={i}\n                            onClick={()=>updateImage(image)}\n                            src={`../../${image}`}\n                            style={{width: \"100%\", display: \"block\"}}\n                            alt=\"\"\n                        />\n                    ))}\n                </Masonry>\n            </ResponsiveMasonry> */}\n    {openedLightBox ? <CoolLightbox links={images} currentImage={roomImage} updateLightBox= {updateLightBox}/> : ''}\n    </div>\n  );\n};\nexport default Room;\n","// extracted by mini-css-extract-plugin\nexport default {\"textImp\":\"Prices_textImp__OLQrA\",\"priceInfo\":\"Prices_priceInfo__O+0dD\",\"link\":\"Prices_link__tNl6k\"};","// extracted by mini-css-extract-plugin\nexport default {\"navLink\":\"Rooms_navLink__cqxjT\",\"prices\":\"Rooms_prices__yW-Ff\",\"thumb\":\"Rooms_thumb__Q7T+x\"};"],"names":["priceLowBefore","dates","priceLowAfter","priceMiddle","priceHigh","roomType","rooms","className","app","map","room","css","to","id","title","persons","priceLow","links","currentImage","updateLightBox","images","link","push","src","loading","alt","useState","indexOf","currentImageIndex","setCurrentIndex","console","log","gotoPrevious","gotoNext","length","isOpen","onPrev","onNext","currentIndex","renderPrevButton","onClick","renderNextButton","onClose","roomImage","updateImage","openedLightBox","roomId","useParams","prices","find","type","filling","roomTable","roomTypes","el","useEffect","roomImg","width","height"],"sourceRoot":""}