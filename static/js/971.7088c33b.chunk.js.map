{"version":3,"file":"static/js/971.7088c33b.chunk.js","mappings":"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","sources":["components/PricesTable.jsx","components/Gallery.jsx","components/Room.jsx","webpack://react-homework-template/./src/components/Prices.module.css?2c02","webpack://react-homework-template/./src/components/Rooms.module.css?9429"],"sourcesContent":["import dates from '../db/seasonDates.json';\nimport { NavLink } from 'react-router-dom';\nimport app from './App.module.css';\nimport css from './Prices.module.css';\n\nconst { priceLowBefore, priceLowAfter, priceMiddle, priceHigh } = dates;\nconst currentPrice = dates => {\n  const getDate = str => {\n    const year = new Date().getFullYear();\n    const [day, month] = str.split('.');\n    return new Date(`${year}-${month}-${day}`);\n  };\n  const startDate = Date.parse(getDate(dates.split('-')[0]));\n  const endDate = Date.parse(getDate(dates.split('-')[1]));\n  const today = Date.now();\n  if (today >= startDate && today <= endDate) return true;\n  else return false;\n};\n\nconst Table = ({ roomType, rooms }) => {\n  return (\n    <table className={app.table}>\n      <caption className={app.title}>{roomType}</caption>\n      <thead>\n        <tr>\n          <td className={app.table__title}>Тип номера</td>\n          <td className={app.table__title}>\n            Ціна\n            <p>{priceLowBefore}</p>\n          </td>\n          <td className={app.table__title}>\n            Ціна\n            <p>{priceMiddle}</p>\n          </td>\n          <td className={app.table__title}>\n            Ціна\n            <p>{priceHigh}</p>\n          </td>\n          <td className={app.table__title}>\n            Ціна\n            <p>{priceLowAfter}</p>\n          </td>\n        </tr>\n      </thead>\n      {rooms[roomType].map(room => (\n        <tbody key={room.id}>\n          <tr className={css.priceInfo}>\n            <td className={app.table__room}>\n              <NavLink\n                to={`/rooms/${roomType}/${room.id}`}\n                className={css.link}\n              >\n                {room.title} <p> {room.persons}-місний</p>\n              </NavLink>\n            </td>\n            <td className={currentPrice(priceLowBefore) ? css.current : ''}>{room.priceLow}</td>\n            <td className={currentPrice(priceMiddle) ? css.current : ''}>{room.priceMiddle}</td>\n            <td className={currentPrice(priceHigh) ? css.current : ''}>{room.priceHigh}</td>\n            <td className={currentPrice(priceLowAfter) ? css.current : ''}>{room.priceLow}</td>\n          </tr>\n        </tbody>\n      ))}\n    </table>\n  );\n};\nexport default Table;\n","import React, { useState } from 'react';\nimport Lightbox from 'react-spring-lightbox';\nimport app from './App.module.css';\n\nconst CoolLightbox = ({ links, currentImage, handleClick }) => {\n  const images = [];\n  links.map(link =>\n    images.push({\n      src: `../../${link}`,\n      loading: 'lazy',\n      alt: link,\n    })\n  );\n  const [currentImageIndex, setCurrentIndex] = useState(\n    links.indexOf(currentImage)\n  );\n\n  const gotoPrevious = () =>\n    currentImageIndex > 0 && setCurrentIndex(currentImageIndex - 1);\n\n  const gotoNext = () =>\n    currentImageIndex + 1 < images.length &&\n    setCurrentIndex(currentImageIndex + 1);\n\n  return (\n    <Lightbox\n      isOpen={true}\n      onPrev={gotoPrevious}\n      onNext={gotoNext}\n      images={images}\n      currentIndex={currentImageIndex}\n      /* Add your own UI */\n      // renderHeader={() => (<CustomHeader />)}\n      // renderFooter={() => (<CustomFooter />)}\n      renderPrevButton={() =>\n        currentImageIndex !== 0 ? (\n          <div className={app.gal__btn__wrapper}>\n            <button\n              className={app.gal__btn}\n              onClick={() => {\n                gotoPrevious();\n              }}\n            >\n              &lt;\n            </button>\n          </div>\n        ) : (\n          ''\n        )\n      }\n      renderNextButton={() =>\n        currentImageIndex < images.length - 1 ? (\n          <div className={app.gal__btn__wrapper}>\n            <button\n              className={app.gal__btn}\n              onClick={() => {\n                gotoNext();\n              }}\n            >\n              &gt;\n            </button>\n          </div>\n        ) : (\n          ''\n        )\n      }\n      // renderImageOverlay={() => (<ImageOverlayComponent >)}\n\n      /* Add styling */\n      className={app.gal}\n      // style={{ background: \"grey\" }}\n\n      /* Handle closing */\n      onClose={() => handleClick('')}\n      /* Use single or double click to zoom */\n      singleClickToZoom\n\n      /* react-spring config for open/close animation */\n      // pageTransitionConfig={{\n      //   from: { transform: \"scale(0.75)\", opacity: 0 },\n      //   enter: { transform: \"scale(1)\", opacity: 1 },\n      //   leave: { transform: \"scale(0.75)\", opacity: 0 },\n      //   config: { mass: 1, tension: 320, friction: 32 }\n      // }}\n    />\n  );\n};\n\nexport default CoolLightbox;\n","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport app from './App.module.css';\nimport css from './Rooms.module.css';\nimport prices from '../db/prices.json';\nimport roomTypes from '../db/types.json';\nimport fillingArr from '../db/filling.json';\nimport Table from './PricesTable';\nimport CoolLightbox from './Gallery';\n\nconst Room = () => {\n  const [roomImage, updateImage] = useState('');\n  const [openedLightBox, updateLightBox] = useState(false);\n\n  const { roomId } = useParams();\n  const room = prices.find(room => room.id === roomId);\n  const {\n    type,\n    id,\n    title,\n    persons,\n    priceLow,\n    priceMiddle,\n    priceHigh,\n    filling,\n    images\n  } = room;\n  const roomTable = {\n    [type]: [{ id, title, persons, priceLow, priceMiddle, priceHigh }],\n  };\n  const { descr } = roomTypes.find(el => el.type === room.type);\n\n  const fillingFull = filling.map(id => {\n    return fillingArr.find(el => el.id === id);\n  });\n\n  const handleClick = roomImg => {\n    updateImage(roomImg);\n    updateLightBox(!openedLightBox);\n  };\n\n  return (\n    <div className={app.wrapper}>\n      <div className={css.thumb}>\n        <Table roomType={type} rooms={roomTable} />\n      </div>\n      <div className={css.thumb}>\n        <p className={app.text}>{descr}</p>\n      </div>\n\n      <p className={app.title}> Комплектація номера:</p>\n      <div className={css.thumb}>\n        <ul className={app.filling}>\n          {fillingFull.map(({ id, title, iconURL }) => (\n            <li key={id} className={app.filling__item}>\n              <svg className={app.icon} width=\"20\" height=\"20\">\n                <use href={`../${iconURL}`}></use>\n              </svg>\n              {title}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <ul className={app.list}>\n        {images?.map(roomImg => (\n          <li key={roomImg} className={app.gal__item}>\n              <img\n                className={app.roomImg}\n                onClick={() => handleClick(roomImg)}\n                src={`../../${roomImg?.split('.')[0]}_480.jpg`}\n                width=\"300\"\n                height=\"220\"\n                alt={room.title}\n              ></img>\n          </li>\n        ))}\n      </ul>\n\n      {openedLightBox ? (\n        <CoolLightbox\n          links={images}\n          currentImage={roomImage}\n          handleClick={handleClick}\n        />\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\nexport default Room;\n","// extracted by mini-css-extract-plugin\nexport default {\"textImp\":\"Prices_textImp__OLQrA\",\"priceInfo\":\"Prices_priceInfo__O+0dD\",\"link\":\"Prices_link__tNl6k\",\"current\":\"Prices_current__c4Ysm\"};","// extracted by mini-css-extract-plugin\nexport default {\"navLink\":\"Rooms_navLink__cqxjT\",\"prices\":\"Rooms_prices__yW-Ff\",\"thumb\":\"Rooms_thumb__Q7T+x\"};"],"names":["priceLowBefore","dates","priceLowAfter","priceMiddle","priceHigh","currentPrice","getDate","str","year","Date","getFullYear","split","day","month","startDate","parse","endDate","today","now","roomType","rooms","className","app","map","room","css","to","id","title","persons","priceLow","links","currentImage","handleClick","images","link","push","src","loading","alt","useState","indexOf","currentImageIndex","setCurrentIndex","gotoPrevious","gotoNext","length","isOpen","onPrev","onNext","currentIndex","renderPrevButton","onClick","renderNextButton","onClose","singleClickToZoom","roomImage","updateImage","openedLightBox","updateLightBox","roomId","useParams","prices","find","type","filling","roomTable","descr","roomTypes","el","fillingFull","fillingArr","roomImg","iconURL","width","height","href"],"sourceRoot":""}