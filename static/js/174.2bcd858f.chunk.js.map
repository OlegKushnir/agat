{"version":3,"file":"static/js/174.2bcd858f.chunk.js","mappings":"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","sources":["components/Rooms/RoomCard.jsx","components/Rooms/RoomCards.jsx","webpack://react-homework-template/./src/components/Rooms/Rooms.module.css?e83f","../node_modules/src/observe.ts"],"sourcesContent":["import app from '../App.module.css';\nimport css from './Rooms.module.css';\nimport { useInView } from 'react-intersection-observer';\nimport { NavLink } from 'react-router-dom';\nimport seasonDAtes from '../../db/seasonDates.json';\nimport fillingArr from '../../db/filling.json';\nimport PropTypes from 'prop-types';\n\nconst RoomCard = ({\n  id,\n  title,\n  persons,\n  priceLow,\n  priceMiddle,\n  priceHigh,\n  filling,\n  images,\n}) => {\n  const { ref, inView } = useInView({\n    threshold: 0,\n  });\n  const fillingIcon = id => {\n    return fillingArr.find(el => el.id === id);\n  };\n\n  return (\n    <li ref={ref} className={!inView ? app.item : `${app.item} ${app.show}`}>\n      <NavLink to={id} className={css.navLink}>\n        <div className={app.imgWrapper}>\n          <img\n            className={app.roomImg}\n            src={images?.length ? `../${images[0].split('.')[0]}_480.jpg` : ''}\n            width=\"320\"\n            height=\"240\"\n            alt={title}\n          ></img>\n        </div>\n        <div className={app.infoWrapper}>\n          <h3 className={app.title}>\n            {title}\n            <p className={app.thinText}> {persons} - місний</p>\n          </h3>\n          <ul className={css.prices}>\n            <li className={app.text}>\n              {seasonDAtes.priceLowBefore} : {priceLow} грн\n            </li>\n            <li className={app.text}>\n              {seasonDAtes.priceMiddle} : {priceMiddle} грн\n            </li>\n            <li className={app.text}>\n              {seasonDAtes.priceHigh} : {priceHigh} грн\n            </li>\n            <li className={app.text}>\n              {seasonDAtes.priceLowAfter} : {priceLow} грн\n            </li>\n          </ul>\n\n          <ul className={app.filling}>\n            {filling.map(el => (\n              <li\n                key={el}\n                className={app.filling__item}\n                title={fillingIcon(el).title}\n              >\n                <svg className={app.icon} width=\"27\" height=\"27\">\n                  <use href={fillingIcon(el).iconURL}></use>\n                </svg>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </NavLink>\n    </li>\n  );\n};\nexport default RoomCard;\n\nRoomCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  persons: PropTypes.number.isRequired,\n  priceHigh: PropTypes.number.isRequired,\n  priceLow: PropTypes.number.isRequired,\n  priceMiddle: PropTypes.number.isRequired,\n  filling: PropTypes.arrayOf(PropTypes.number).isRequired,\n  images:PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport app from '../App.module.css';\nimport prices from '../../db/prices.json';\nimport RoomCard from './RoomCard';\n\nconst RoomCards = () => {\n  const { roomType } = useParams();\n  const rooms = prices.filter(room => room.type === roomType);\n\n  return (\n    <section className={app.wrapper}>\n      <h2 className={app.section__title}>{roomType}</h2>\n      <div className={app.wrapper}>\n        <ul className={app.list}>\n          {rooms.map(\n            ({\n              id,\n              title,\n              persons,\n              priceLow,\n              priceMiddle,\n              priceHigh,\n              filling,\n              images,\n            }) => (\n              <RoomCard\n                key={id}\n                id={id}\n                title={title}\n                persons={persons}\n                priceLow={priceLow}\n                priceMiddle={priceMiddle}\n                priceHigh={priceHigh}\n                filling={filling}\n                images={images}\n              />\n            )\n          )}\n        </ul>\n      </div>\n    </section>\n  );\n};\nexport default RoomCards;\n","// extracted by mini-css-extract-plugin\nexport default {\"navLink\":\"Rooms_navLink__zqqKc\",\"prices\":\"Rooms_prices__5NCfl\",\"thumb\":\"Rooms_thumb__h8SOL\"};","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n"],"names":["id","title","persons","priceLow","priceMiddle","priceHigh","filling","images","useInView","threshold","ref","inView","fillingIcon","fillingArr","el","className","app","to","css","src","length","split","width","height","alt","seasonDAtes","map","href","iconURL","roomType","useParams","rooms","prices","filter","room","type","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","defaultFallbackInView","getRootId","root","has","get","set","sort","key","createObserver","instance","some","Object","intersectionRatio","trackVisibility","isVisible","IntersectionObserver","entries","entry","isIntersecting","forEach","target","callback","Array","element","isArray","fallbackInView","window","bounds","getBoundingClientRect","time","boundingClientRect","thresholds","intersectionRect","rootBounds","callbacks","push","observe","unobserve","splice","indexOf","delete","size","disconnect","isPlainChildren","props","children","InView","constructor","node","_unobserveCb","handleNode","triggerOnce","setState","keys","initialInView","skip","observeNode","handleChange","onChange","state","componentDidUpdate","prevProps","observerMap","useEffect","current","as","createElement","useState","entryTarget","setRef","React"],"sourceRoot":""}